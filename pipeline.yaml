trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDir: '$(Build.ArtifactStagingDirectory)/publish'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restore Nuget Package'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build Project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish Project'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(outputDir)'
    zipAfterPublish: false

- task: CopyFiles@2
  displayName: 'Copy Additional Files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/*.json'
    TargetFolder: '$(outputDir)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(outputDir)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

stages:
- stage: Deploy
  displayName: 'Deploy to IIS'
  dependsOn: Build
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    pool:
      name: 'Default'  # Replace with your self-hosted agent pool name if needed

    steps:
    - download: current
      artifact: drop

    - task: PowerShell@2
      displayName: 'Deploy to IIS'
      inputs:
        targetType: 'inline'
        script: |
          $WebAppPath = 'C:\inetpub\wwwroot'
          $SiteName = 'Default Web Site'            
          $SourcePath = "$(Pipeline.Workspace)\drop"  

          Write-Output "Stopping IIS website: $SiteName"
          Import-Module WebAdministration

          # Check if site exists before stopping
          if (Test-Path "IIS:\Sites\$SiteName") {
              Stop-Website -Name $SiteName
              Write-Output "Website $SiteName stopped successfully."
          } else {
              Write-Output "Website $SiteName not found. Skipping stop."
          }

          # Clean old files in the web app path (if any)
          Write-Output "Cleaning old files in: $WebAppPath"
          Remove-Item "$WebAppPath\*" -Recurse -Force -ErrorAction SilentlyContinue

          # Copy the new published files
          Write-Output "Copying new files to: $WebAppPath"
          Copy-Item "$SourcePath\*" -Destination $WebAppPath -Recurse

          # Start the IIS website again
          Write-Output "Starting website: $SiteName"
          if (Test-Path "IIS:\Sites\$SiteName") {
              Start-Website -Name $SiteName
              Write-Output "Website $SiteName started successfully."
          } else {
              Write-Output "Website $SiteName does not exist. Deployment completed, but website not found."
          }

